# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Pipeline CI CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup Java 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build and test with Maven
      run: mvn clean install

    - name: SonarCloud Analysis
      run: mvn sonar:sonar -s .m2/settings.xml -Dsonar.token=${{ secrets.SONAR_TOKEN }} -Dsonar.organization=raouldevops -Dsonar.projectKey=raouldevops_demo-app-github-actions-ci-cd

    - name: SonarQube Quality Gate check
      id: sonarqube-quality-gate-check
      run: mvn verify sonar:sonar -s .m2/settings.xml -Dsonar.token=${{ secrets.SONAR_TOKEN }} -Dsonar.organization=raouldevops -Dsonar.projectKey=raouldevops_demo-app-github-actions-ci-cd -Dsonar.qualitygate.wait=true

    - name: SonarQube Quality Gate Status
      run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"

    - name: Login to docker
      run: docker login --username ${{ secrets.DOCKERHUB_USERNAME }} --password ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build docker image
      run: docker build -t raouldevops/demo-github-actions-app .

    - name: Publish image to docker hub
      run: docker push raouldevops/demo-github-actions-app:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Deploy on ec2 instance
      run: echo "it is ready for the deployment"
